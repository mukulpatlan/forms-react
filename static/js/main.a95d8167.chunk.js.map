{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["useInput","validateValue","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","reset","hasError","valueChangeHandler","event","target","inputBlurHandler","isNotEmpty","trim","isEmail","includes","BasicForm","props","enteredFirstName","firstNameIsValid","resetFirstName","firstNameHasError","firstNameChangeHandler","firstNameBlurHandler","enteredLastName","lastNameIsValid","resetLastName","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","enteredEmail","emailIsValid","resetEmail","emailHasError","emailChangeHandler","emailBlurHandler","formIsValid","firstNameClasses","lastNameClasses","emailClasses","onSubmit","preventDefault","className","htmlFor","type","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"iKAgCeA,EA9BE,SAACC,GACd,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAeN,EAAcE,GAgBnC,MAAO,CACHK,MAAOL,EACPM,QAASF,EACTG,MARU,WACVN,EAAgB,IAChBE,GAAa,IAObK,UAnBcJ,GAAgBF,EAoB9BO,mBAlBuB,SAAAC,GACvBT,EAAgBS,EAAMC,OAAON,QAkB7BO,iBAfqB,WACrBT,GAAa,M,OCVfU,EAAa,SAAAR,GAAK,MAAqB,KAAjBA,EAAMS,QAC5BC,EAAU,SAAAV,GAAK,OAAIA,EAAMW,SAAS,MA2EzBC,EAzEG,SAACC,GAEjB,MAOIrB,EAASgB,GANJM,EADT,EACEd,MACSe,EAFX,EAEEd,QACOe,EAHT,EAGEd,MACUe,EAJZ,EAIEd,SACoBe,EALtB,EAKEd,mBACkBe,EANpB,EAMEZ,iBAEF,EAOIf,EAASgB,GANJY,EADT,EACEpB,MACSqB,EAFX,EAEEpB,QACOqB,EAHT,EAGEpB,MACUqB,EAJZ,EAIEpB,SACoBqB,EALtB,EAKEpB,mBACkBqB,EANpB,EAMElB,iBAEF,EAOIf,EAASkB,GANJgB,EADT,EACE1B,MACS2B,EAFX,EAEE1B,QACO2B,EAHT,EAGE1B,MACU2B,EAJZ,EAIE1B,SACoB2B,EALtB,EAKE1B,mBACkB2B,EANpB,EAMExB,iBAGEyB,GAAc,EAEdjB,GAAoBM,GAAmBM,IACzCK,GAAc,GAGhB,IAUMC,EAAmBhB,EAAoB,uBAAyB,eAChEiB,EAAkBX,EAAmB,uBAAyB,eAC9DY,EAAeN,EAAgB,uBAAyB,eAE9D,OACE,uBAAMO,SAfkB,SAAA/B,GACxBA,EAAMgC,iBACDL,IAGLhB,IACAM,IACAM,MAQA,UACE,sBAAKU,UAAU,gBAAf,UACE,sBAAKA,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,YAAf,wBACA,uBAAOC,KAAK,OAAOC,GAAG,YAAYzC,MAAOc,EAAkB4B,SAAUxB,EAAwByB,OAAQxB,IACpGF,GAAqB,mBAAGqB,UAAU,aAAb,sCAExB,sBAAKA,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OAAOC,GAAG,WAAWzC,MAAOoB,EAAiBsB,SAAUlB,EAAuBmB,OAAQlB,IACjGF,GAAoB,mBAAGe,UAAU,aAAb,wCAGzB,sBAAKA,UAAWH,EAAhB,UACE,uBAAOI,QAAQ,QAAf,4BACA,uBAAOC,KAAK,OAAOC,GAAG,QAAQzC,MAAO0B,EAAcgB,SAAUZ,EAAoBa,OAAQZ,IACxFF,GAAiB,mBAAGS,UAAU,aAAb,iCAEpB,qBAAKA,UAAU,eAAf,SACE,wBAAQM,UAAWZ,EAAnB,0BC/DOa,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCDNQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a95d8167.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nconst useInput = (validateValue) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [isTouched, setIsTouched] = useState('');\n\n    const valueIsValid = validateValue(enteredValue);\n    const hasError = !valueIsValid && isTouched;\n\n    const valueChangeHandler = event => {\n        setEnteredValue(event.target.value);\n    }\n\n    const inputBlurHandler = () => {\n        setIsTouched(true);\n    }\n\n    const reset = () => {\n        setEnteredValue('');\n        setIsTouched(false);\n    }\n\n    return {\n        value: enteredValue,\n        isValid: valueIsValid,\n        reset,\n        hasError,\n        valueChangeHandler,\n        inputBlurHandler\n    }\n}\n\nexport default useInput;","// import {useInput} from '../hooks/use-input';\n\nimport useInput from \"../hooks/use-input\";\n\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.includes('@');\n\nconst BasicForm = (props) => {\n\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    reset: resetFirstName,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    reset: resetLastName,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    reset: resetEmail,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitFormhandler = event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitFormhandler}>\n      <div className='control-group'>\n        <div className={firstNameClasses}>\n          <label htmlFor='firstName'>First Name</label>\n          <input type='text' id='firstName' value={enteredFirstName} onChange={firstNameChangeHandler} onBlur={firstNameBlurHandler} />\n          {firstNameHasError && <p className='error-text'>First Name is invalid</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor='lastName'>Last Name</label>\n          <input type='text' id='lastName' value={enteredLastName} onChange={lastNameChangeHandler} onBlur={lastNameBlurHandler} />\n          {lastNameHasError && <p className='error-text'>Last Name is invalid</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='text' id='email' value={enteredEmail} onChange={emailChangeHandler} onBlur={emailBlurHandler} />\n        {emailHasError && <p className='error-text'>Email is invalid</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n// import SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}